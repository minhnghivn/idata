# DATA SANITIZER
#
# @author Nghi Pham
# @date April 2014
#
require 'optparse'

$options = {
  :remove => []
}
parser = OptionParser.new("", 24) do |opts|
  opts.banner = "\nProgram: Data Sanitizer\nAuthor: Nghi Pham\n\n"

  opts.on("--remove CHARCODE", "Unicode code") do |v|
    $options[:remove] << v
  end

  opts.on_tail('--help', 'Displays this help') do
		puts opts, "", help
    exit
	end
end

def help
  return <<-eos

EXAMPLES
-------------------------------------------------------
    
eos
end

begin
  parser.parse!
rescue SystemExit => ex
  exit
end

if ARGV.empty?
  puts "ERROR: Please specify input file"
  exit
end

def sanitize(file)
  s = IO.read(file)

  # Remove invalid UTF-8 byte code
  s = s.encode('UTF-8', 'binary', invalid: :replace, undef: :replace, replace: '')

  # Remove wrong char
  $options[:remove].each do |c|
    s.gsub!([c.to_i].pack("U"), "")
  end

  # Write back
  File.open(file, 'wb') {|f| f.write(s)}
end

ARGV.each do |file|
  sanitize(file)
end

puts "\n#{ARGV.count} file(s) sanitized\n"
